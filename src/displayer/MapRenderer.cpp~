/*
** MapRenderer.cpp for prototype in /home/vasseu_g/rendu/prototype
**
** Made by Adrien Vasseur
** Login   <vasseu_g@epitech.net>
**
** Started on  Thu Jun 18 16:50:36 2015 Adrien Vasseur
** Last update Wed Jun 24 14:47:43 2015 Antoine Lempereur
*/

#include	"displayer/MapRenderer.h"
#include	"Map.h"

extern		std::vector<std::vector<Engine::Square*> > global_map;

namespace	Displayer
{
  MapRenderer::MapRenderer()
  {
    this->m_tex_pave = NULL;
    this->m_spr_pave = NULL;
  }

  MapRenderer::~MapRenderer()
  {
    if (this->m_tex_pave)
      delete this->m_tex_pave;
    if (this->m_spr_pave)
      delete this->m_spr_pave;
  }

  bool MapRenderer::init()
  {
    sf::Vector2u	rect;
    double		scale;

    this->m_tex_pave = new sf::Texture;
    if (!this->m_tex_pave->loadFromFile("test2.png"))
      return (false);
    this->m_spr_pave = new sf::Sprite(*this->m_tex_pave);
    rect = this->m_tex_pave->getSize();
    scale = W_CASE / ((double)(rect.x) / 3);
    this->m_spr_pave->scale(sf::Vector2f(scale, scale));
    return (true);
  }

  void MapRenderer::draw(sf::RenderWindow *win, Displayer::Camera *cam)
  {
    sf::Vector2u	ite;
    sf::Vector2u	size;
    double		scale;
    int			i;
    int			j;
    sf::Vector2u	size_square;

    ite.y = 0;
    ite.x = 0;
    size = win->getSize();
    scale = W_CASE / ((double)(this->m_tex_pave->getSize().x) / 3);
    size_square.x = 1 / scale * W_CASE;
    scale = H_CASE / (double)(this->m_tex_pave->getSize().y);
    size_square.y = 1 / scale * H_CASE;
    j = cam->getY();
    while (ite.y < size.y && j < MAP_HEIGHT)
      {
	i = cam->getX();
	while (ite.x < size.x && i < MAP_WIDTH)
	  {
	    this->m_spr_pave->setTextureRect
	      (sf::IntRect(global_map[j][i]->get_type() * size_square.x,
			   0, size_square.x, size_square.y));
	    this->m_spr_pave->setPosition(ite.x, ite.y);
	    win->draw(*this->m_spr_pave);
	    ite.x += W_CASE;
	    i++;
	  }
	ite.y += H_CASE / 2;
	ite.x += W_CASE / 2;
	ite.x %= W_CASE;
	j++;
      }
  }
};
